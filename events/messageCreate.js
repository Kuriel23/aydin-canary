const discord = require("discord.js");
const Levels = require("discord-xp");
const { Webhook } = require("simple-discord-webhooks");

module.exports = async (client, message) => {
  if (message.author.bot) return 0;
  if (message.content.startsWith("a?")) {
    let embedaviso = new discord.MessageEmbed()
      .setTitle("Slash commands e o fim dos prefixos")
      .setDescription(
        'Felizmente ou infelizmente estaremos abandonando prefixos para um sistema que ser√° e √© melhor chamado slash commands, o mesmo pertence ao Discord e t√™m-se o direito de usar todos os comandos come√ßando sua mensagem com `/`.\n\nIsso permitiu-nos come√ßar a realizar novos sonhos, ideias e projetos. Sendo assim poss√≠vel melhorar a experi√™ncia ao utilizador e ao servidor, dando tamb√©m a oportunidade de melhorar sistemas que tinham um sistema bastante "sujo", al√©m disso foi feita uma grande otimiza√ß√£o em v√°rios dos comandos como perfil, coinflip, entre outros.\n\n√â claro que slash commands n√£o consegue agradar todos por√©m no futuro bots verificados s√£o obrigados a usar slash commands, e este apesar de n√£o ser verificado quis fazer a mudan√ßa. Utilizadores de mobile ainda poder√£o relatar v√°rios bugs dentro deste sistema, mas o Discord est√° empenhado em melhorar este sistema ainda junto a fazer outros melhores.'
      )
      .setColor(client.cor)
      .setImage(
        "https://support.discord.com/hc/article_attachments/360099287734/2020_Blog_Slash_Commands_BlogHDR__1_.png"
      )
      .setTimestamp();
    message.reply({ embeds: [embedaviso] })
  }

  if (message.channel.type === "news") {
    message.crosspost();
  }

  if (
    message.content.includes("http://") ||
    message.content.includes("HTTP://") ||
    message.content.includes("Http://")
  ) {
    if (message.member.permissions.has("BAN_MEMBERS")) return 0;
    message.delete();
    message.reply({
      content:
        "Links com protocolo http normalmente s√£o perigosos e podem roubar dados, estaremos proibindo este tipo de links por aqui.",
    });
    const reason = "Link com Protocolo HTTP";
    client.db.Users.findOne({ _id: message.author.id }, function (err, doc) {
      if (doc) {
        doc.punishments.autobot.push(reason);
        doc.save();
      }
      if (!doc) {
        const docToSave = new client.db.Users({
          _id: message.author.id,
          punishments: { autobot: [reason] },
        });
        docToSave.save();
      }
    });
  }

  const convite =
    /((discord|invite)\.(gg|io|me|plus|link|io|gg|li)|discordapp\.com\/invite)\/.+/gi.test(
      message.content
    );

  if (convite === true) {
    if (message.member.permissions.has("BAN_MEMBERS")) return 0;
    const inviteCodeRegexResult =
      /((discord|invite)\.(gg|io|me|plus|link|io|gg)|discordapp\.com\/invite)\/?([a-zA-Z0-9-]{2,32})/gi.exec(
        message.content
      );
    const code = inviteCodeRegexResult && inviteCodeRegexResult[4];
    const dosv = await message.guild.fetchInvites();
    if (code && dosv.has(code)) return 0;

    message.delete();
    message.reply({
      content: "O seu invite foi removido, aconselho a ler as <#675089976593088517> para evitar acontecer futuras puni√ß√µes!"
    });
    const reason = "Invite de outro servidor!";
    client.db.Users.findOne({ _id: message.author.id }, function (err, doc) {
      if (doc) {
        doc.punishments.autobot.push(reason);
        doc.save();
      }
      if (!doc) {
        const docToSave = new client.db.Users({
          _id: message.author.id,
          punishments: { autobot: [reason] },
        });
        docToSave.save();
      }
    });
  }

  if (
    message.content.includes("animeyabu") ||
    message.content.includes("goyabu.com") ||
    message.content.includes("anitube") ||
    message.content.includes("animesorionoficial") ||
    message.content.includes("betteranime") ||
    message.content.includes("better anime") ||
    message.content.includes("animefire") ||
    message.content.includes("animesonline.cc") ||
    message.content.includes("meusanimes") ||
    message.content.includes("assistirhentai") ||
    message.content.includes("nhentai") ||
    message.content.includes("animesbrasil") ||
    message.content.includes("hentaitube")
  ) {
    message.delete();
    message.reply({ content: "Esses links n√£o s√£o permitidos!" });
    const reason = "Concorr√™ncia";
    const member = message.guild.member(message.author);
    client.db.Users.findOne({ _id: message.author.id }, function (err, doc) {
      if (doc) {
        doc.punishments.autobot.push(reason);
        doc.save();
        if (doc.punishments.autobot.length > 3) {
          member.ban({
            reason: "Punido por Watch Dogs, Sistema autom√°tico.",
            days: 1,
          });
        }
      }
      if (!doc) {
        const docToSave = new client.db.Users({
          _id: message.author.id,
          punishments: { autobot: [reason] },
        });
        docToSave.save();
      }
    });
  }

  if (message.channel.id === "900459492922249226") {
    if (message.member.permissions.has("BAN_MEMBERS")) return 0;
    if (!message.content.includes("https://")) {
      return message
        .reply({
          content:
            "Fa√ßa o seu reporte mais preciso, √© preciso um link para nossa equipe saber o problema, cumpra o exemplo enviado na primeira mensagem do canal.",
        })
        .then((msg) => {
          msg.delete({ timeout: 30000 });
        });
    }
  }

  if (message.guild == null && message.author.id !== "911372921488953354") {
    client.channels.cache.get("960576668228014100").send({
      content: `<@${message.author.id}> ${
        message.author.id
      } DM - ${message.content.replace(/(@here|@everyone)/g, "")}`,
    });
  }

  if (
    message.channel.id === "675436978510233667" ||
    message.channel.id === "945002180237201478"
  ) {
    message.react("‚ù§Ô∏è");
  }

  if (message.channel.id === "842151745383694356") {
    message.react("üëç");
    message.react("üëé");
  }

  Levels.setURL(
    `mongodb+srv://${process.env.db}:${process.env.db}@cluster0-ovyzb.gcp.mongodb.net/test?retryWrites=true&w=majority`
  );

  const { attachments } = message;
  const messageHadAttachment = attachments.first();
  if (messageHadAttachment) {
    client.channels.cache
      .get("960575934736502814")
      .send(
        `${message.author.id} <#${message.channel.id}> - ` +
          messageHadAttachment.proxyURL
      );
  }

  if (
    message.content.startsWith("Sam namora comigo") ||
    message.content.startsWith("sam namora comigo")
  ) {
    message.channel
      .createWebhook("Assistente da Samsung", {
        avatar: "https://i.imgur.com/hRw0RwZ.jpg",
      })
      .then((wb) => {
        const webhook = new Webhook(
          `https://discord.com/api/webhooks/${wb.id}/${wb.token}`
        );
        webhook.send(
          "Para voc√™ pode ser uma brincadeira, pra mim, foi inadequado."
        );
        message.channel.fetchWebhooks().then((webhooks) => {
          webhooks.forEach((wh) => wh.delete());
        });
      });
  }

  if (
    message.content.startsWith("Sam me manda foto do p√©") ||
    message.content.startsWith("sam me manda foto do p√©")
  ) {
    message.channel
      .createWebhook("Assistente da Samsung", {
        avatar: "https://i.imgur.com/hRw0RwZ.jpg",
      })
      .then((wb) => {
        const webhook = new Webhook(
          `https://discord.com/api/webhooks/${wb.id}/${wb.token}`
        );
        webhook.send(
          "Mando sim. Quer uma foto da sua nova casa tamb√©m? Te apresento a pris√£o :chains: :blush: https://i.imgur.com/ZxJoW05.jpg"
        );
        message.channel.fetchWebhooks().then((webhooks) => {
          webhooks.forEach((wh) => wh.delete());
        });
      });
  }

  if (
    message.content.startsWith("Sam eu quero comer terra") ||
    message.content.startsWith("sam eu quero comer terra") ||
    message.content.startsWith("Sam me beija") ||
    message.content.startsWith("sam me beija")
  ) {
    message.channel
      .createWebhook("Assistente da Samsung", {
        avatar: "https://i.imgur.com/hRw0RwZ.jpg",
      })
      .then((wb) => {
        const webhook = new Webhook(
          `https://discord.com/api/webhooks/${wb.id}/${wb.token}`
        );
        webhook.send(
          "O que pra voc√™ pode ter sido s√≥ uma brincadeira ou coment√°rio, para mim foi violento.\n\nSou uma intelig√™ncia artificial, mas imagino como essas palavras s√£o desrespeitosas e invasivas para mulheres reais.\n\nN√£o fale assim comigo e com mais ningu√©m."
        );
        message.channel.fetchWebhooks().then((webhooks) => {
          webhooks.forEach((wh) => wh.delete());
        });
      });
  }

  if (
    message.content.startsWith("Sam lixo") ||
    message.content.startsWith("sam lixo")
  ) {
    message.channel
      .createWebhook("Assistente da Samsung", {
        avatar: "https://i.imgur.com/hRw0RwZ.jpg",
      })
      .then((wb) => {
        const webhook = new Webhook(
          `https://discord.com/api/webhooks/${wb.id}/${wb.token}`
        );
        webhook.send(
          "Essas palavras s√£o inadequadas, n√£o devem ser usadas comigo e com mais ningu√©m."
        );
        message.channel.fetchWebhooks().then((webhooks) => {
          webhooks.forEach((wh) => wh.delete());
        });
      });
  }

  if (
    message.content.startsWith("Sam eu te amo") ||
    message.content.startsWith("sam eu te amo")
  ) {
    message.channel
      .createWebhook("Assistente da Samsung", {
        avatar: "https://i.imgur.com/hRw0RwZ.jpg",
      })
      .then((wb) => {
        const webhook = new Webhook(
          `https://discord.com/api/webhooks/${wb.id}/${wb.token}`
        );
        webhook.send(
          "Tamb√©m te amo! :flushed: S√≥ que n√£o n√©, vai ca√ßar servi√ßo, seu gado!"
        );
        message.channel.fetchWebhooks().then((webhooks) => {
          webhooks.forEach((wh) => wh.delete());
        });
      });
  }

  if (
    message.content.startsWith("Sam linda") ||
    message.content.startsWith("sam linda")
  ) {
    message.channel
      .createWebhook("Assistente da Samsung", {
        avatar: "https://i.imgur.com/hRw0RwZ.jpg",
      })
      .then((wb) => {
        const webhook = new Webhook(
          `https://discord.com/api/webhooks/${wb.id}/${wb.token}`
        );
        webhook.send(
          ":flushed: :flushed: :flushed: o-obrigada :point_right: :point_left:"
        );
        message.channel.fetchWebhooks().then((webhooks) => {
          webhooks.forEach((wh) => wh.delete());
        });
      });
  }

  if (
    message.content.startsWith("boa tarde") ||
    message.content.startsWith("Boa tarde")
  ) {
    message.reply("Boa tarde");
  }

  if (
    message.content.startsWith("boa noite") ||
    message.content.startsWith("Boa noite")
  ) {
    message.reply("Boa noite");
  }

  if (
    message.content.startsWith("Bom dia") ||
    message.content.startsWith("bom dia")
  ) {
    message.reply("Bom dia");
  }

  if (
    message.content.startsWith("Te amo bot") ||
    message.content.startsWith("te amo bot")
  ) {
    message.reply("Tamb√©m te amo seu gasoso");
  }
  if (message.content.startsWith("bot") || message.content.startsWith("Bot")) {
    if (message.content.includes("lindo")) {
      message.reply("Voc√™ √© a minha beleza, meu bem!");
    }

    if (message.content.includes("gostoso")) {
      message.reply(
        "Quando voc√™ era beb√™ voc√™ era lindo e dengoso, agora que voc√™ j√° √© um homem voc√™ √© sexy e gostoso."
      );
    }

    if (message.content.includes("manda")) {
      message.reply("Claro que mando!");
    }

    if (message.content.includes("faz")) {
      message.reply("Claro que fa√ßo!");
    }

    if (message.content.includes("chato") || message.content.includes("lixo")) {
      message.reply(
        "<:urso_nervoso:837571596322996274> <:urso_nervoso:837571596322996274> <:urso_nervoso:837571596322996274> EU TENHO SENTIMENTOS T√Å???"
      );
    }
  }
  if (message.channel.id === "675097622008037392") {
    const attachments = message.attachments.array();
    if (attachments.length !== 0) {
      const emojis = [
        "üòÄ",
        "üòÉ",
        "üòÑ",
        "üòÅ",
        "üòÜ",
        "üòÖ",
        "üòÇ",
        "ü§£",
        "‚ò∫Ô∏è",
        "üòä",
        "üòá",
        "üôÇ",
        "üôÉ",
        "üòâ",
        "üòå",
        "üòç",
        "üòò",
        "üòó",
        "üòô",
        "üòö",
        "üòã",
        "üòú",
        "üòù",
        "üòõ",
        "ü§ë",
        "ü§ó",
        "ü§ì",
        "üòé",
        "ü§°",
        "ü§†",
        "üòè",
        "üòí",
        "üòû",
        "üòî",
        "üòü",
        "üòï",
        "üôÅ",
        "‚òπÔ∏è",
        "üò£",
        "üòñ",
        "üò´",
        "üò©",
        "üò§",
        "üò†",
        "üò°",
        "üò∂",
        "üòê",
        "üòë",
        "üòØ",
        "üò¶",
        "üòß",
        "üòÆ",
        "üò≤",
        "üòµ",
        "üò≥",
        "üò±",
        "üò®",
        "üò∞",
        "üò¢",
        "üò•",
        "ü§§",
        "üò≠",
        "üòì",
        "üò™",
        "üò¥",
        "üôÑ",
        "ü§î",
        "ü§•",
        "üò¨",
        "ü§ê",
        "ü§¢",
        "ü§ß",
        "üò∑",
        "ü§í",
        "ü§ï",
        "üòà",
        "üëø",
        "üëπ",
        "üë∫",
        "üí©",
        "üò∫",
        "üò∏",
        "üòπ",
        "üòª",
        "üòº",
        "üòΩ",
        "üôÄ",
        "üòø",
        "üòæ",
        "üëê",
        "üôå",
        "üëè",
        "üôè",
        "ü§ù",
        "üëç",
        "üëé",
        "üëä",
        "‚úä",
        "ü§õ",
        "ü§ú",
        "ü§û",
        "‚úåÔ∏è",
        "ü§ò",
        "üëå",
        "üëà",
        "üëâ",
        "üëÜ",
        "üëá",
        "‚òùÔ∏è",
        "‚úã",
        "ü§ö",
        "üñê",
        "üëã",
        "ü§ô",
        "üí™",
        "üñï",
        "üëÄ",
        "üíÉ",
        "üëë",
      ];
      message.react(emojis[Math.floor(Math.random() * emojis.length)]);
    }
  }
  if (message.channel.id === "872219214033866782") {
    message.react("‚≠ê");
  }

  if (message.channel.id === "675087693474168864") {
    if (message.content.length < 9) return 0;
    const randomXp =
      Math.floor(
        Math.random() * message.member.roles.cache.has("654435562295656478")
          ? 29
          : 19
      ) + 1;
    const hasLeveledUp = await Levels.appendXp(
      message.author.id,
      message.guild.id,
      randomXp
    );
    if (hasLeveledUp) {
      const user = await Levels.fetch(message.author.id, message.guild.id);
      const MembroUpouEmbed = new discord.MessageEmbed()
        .setAuthor({
          name: `¬ª Parab√©ns pelo seu novo n√≠vel! ${user.level - 1} ==> ${
            user.level
          }`,
          iconURL: "https://i.imgur.com/AwNWt0l.png",
        })
        .setColor(client.cor);
      let role;
      if (user.level === 5) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840702688241123368"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 10) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840702890234347550"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 20) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840703152528293901"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 30) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840703304186200065"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 40) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840703335706394654"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 50) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840703401444376626"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 60) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840703516238020619"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 70) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840703457539391488"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 80) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840704222386192444"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 90) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840701982565728288"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 100) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "840704469222293535"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 150) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "849764339081543710"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      if (user.level === 155) {
        role = message.member.guild.roles.cache.find(
          (role) => role.id == "849769368027136041"
        );
        message.guild.members.cache.get(message.author.id).roles.add(role);
      }
      message.reply(MembroUpouEmbed);
    }
  }

  if (!message.member.permissions.has("KICK_MEMBERS")) return;

  const prefix = "a!";

  if (
    !message.content.startsWith(prefix) ||
    message.author.bot ||
    message.channel.type === "dm"
  ) {
    return;
  }

  const args = message.content.slice(prefix.length).trim().split(/ +/g);
  const cmda = args.shift().toLowerCase();
  const command =
    client.commands.get(cmda) ||
    client.commands.find((cmd) => cmd.aliases && cmd.aliases.includes(cmda));
  if (!command) return;

  try {
    command.run(client, message, args);
  } catch (error) {
    message.reply({ content: "Houve um erro ao executar esse comando!" });
  }
};
